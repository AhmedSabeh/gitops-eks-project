pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
        GITHUB_CREDENTIALS = credentials('github-creds')
        IMAGE_NAME = "ahmedsabeh/jenkins-app"
    }

    stages {
        stage('Build App') {
            steps {
                sh './mvnw clean package -DskipTests'  // Build Java Spring Boot app
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def imageTag = "${env.BUILD_NUMBER}"
                    sh "docker build -t ${IMAGE_NAME}:${imageTag} ."
                    env.IMAGE_TAG = imageTag
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                sh "echo ${DOCKERHUB_CREDENTIALS_PSW} | docker login -u ${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
                sh "docker push ${IMAGE_NAME}:${env.IMAGE_TAG}"
            }
        }

        stage('Clean Local Image') {
            steps {
                sh "docker rmi ${IMAGE_NAME}:${env.IMAGE_TAG}"
            }
        }

        stage('Update Deployment YAML') {
            steps {
                sh "sed -i 's|image: .*|image: ${IMAGE_NAME}:${env.IMAGE_TAG}|' deployment.yaml"
            }
        }

        stage('Push Changes to GitHub') {
            steps {
                sh """
                git config --global user.email "ahmedsabeh911.com"
                git config --global user.name "ahmedsabeh"
                git add deployment.yaml
                git commit -m "Update image to ${IMAGE_NAME}:${env.IMAGE_TAG}"
                git push https://${GITHUB_CREDENTIALS_USR}:${GITHUB_CREDENTIALS_PSW}@github.com/AhmedSabeh/eks-gitops-lab.git HEAD:main
                """
            }
        }
    }
}

